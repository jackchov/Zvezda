import pygame
from player import Player



class GameState():


    def __init__(self):
        self.state='plansza_2_2'
        #self.state='intro_menu'
        self.player=Player()


    ''' Tutaj są metody do sprawdzania czy gracz był na danej planszy,
    zmieńcie nazwy self.state na własne, bo różnie się nazywają, a to szablon'''

    def check_plansza1(self):
        if self.player.plansza1==False:
            self.state='plansza_1_1'
        else:
            self.state='plansza_1_again'

    def check_plansza2(self):
        if self.player.plansza2==False:
            self.state='plansza_2'
        else:
            self.state='plansza_2_again'

    def check_plansza3(self):
        if self.player.plansza3==False:
            self.state='plansza_3'
        else:
            self.state='plansza_3_again'

    def check_plansza4(self):
        if self.player.plansza4==False:
            self.state='plansza_4'
        else:
            self.state='plansza_4_again'

    def check_plansza5(self):
        if self.player.plansza5==False:
            self.state='plansza_5_1'
        else:
            self.state='plansza_5_again'
    def check_plansza6(self):
        if self.player.plansza6==False:
            self.state='plansza_6'
        else:
            self.state='plansza_6_again'
    def check_plansza7(self):
        if self.player.plansza7==False:
            self.state='plansza_7'
        else:
            self.state='plansza_7_again'
    def check_plansza8(self):
        if self.player.plansza8==False:
            self.state='plansza_8'
        else:
            self.state='plansza_8_again'
    def check_plansza9(self):
        if self.player.plansza9==False:
            self.state='plansza_9'
        else:
            self.state='plansza_9_again'


    ''' Plansze początkowe - kokpit, animacja spadania statku'''

    def intro_menu(self):
        #print(pygame.mouse.get_pos()) #Wyświetlanie aktualnej pozycji myszy do testów
        buttn_click=0
        danger_flag=0
        while buttn_click==0:
            for event in pygame.event.get():
                if event.type==pygame.QUIT:#Krzyżyk okna wyłącza grę
                    pygame.quit()
                if event.type==pygame.MOUSEBUTTONDOWN: #Dwie następne linijki sprawdzają, czy mysz jest na przycisku
                    if pygame.mouse.get_pos()[0]>=(SCREEN_WIDTH/2-64) and pygame.mouse.get_pos()[0]<=(SCREEN_WIDTH/2+64):
                        if pygame.mouse.get_pos()[1]>=(3*SCREEN_HEIGHT/4-64) and pygame.mouse.get_pos()[1]<=(3*SCREEN_HEIGHT/4+64):
                            buttn_click=1
                            self.state='plansza_awaria'

        #screen.fill((0,0,0)) #screen.fill((R,G,B)), kolor tła, późniejsza wersja - dodoać obraz
            if danger_flag==0:
                screen.blit(background_menu_resized,(0,0))#(nazwa obrazu, pozycja 0,0 - lewy dolny róg)
                screen.blit(red_button,(SCREEN_WIDTH/2-64,3*SCREEN_HEIGHT/4-64))
                screen.blit(danger,(SCREEN_WIDTH/2-201,SCREEN_HEIGHT/3-62+30))
                screen.blit(emergency_txt,(SCREEN_WIDTH/2-327,SCREEN_HEIGHT-100))
                pygame.display.update()
                danger_flag=1
                clock.tick(1)
            else:
                screen.blit(background_menu_resized,(0,0))#(nazwa obrazu, pozycja 0,0 - lewy dolny róg)
                screen.blit(red_button,(SCREEN_WIDTH/2-64,3*SCREEN_HEIGHT/4-64))
                screen.blit(emergency_txt,(SCREEN_WIDTH/2-327,SCREEN_HEIGHT-100))
                pygame.display.update()
                danger_flag=0
                clock.tick(2)
        #pygame.display.flip()



    def plansza_awaria(self):
        imageX= 0; # x coordnate of image
        imageY= 0; # y coordinate of image
        while imageX<=1400:
            for event in pygame.event.get():
                if event.type==pygame.QUIT:#Krzyżyk okna wyłącza grę
                    pygame.quit()
            imageX =imageX + 10;
            imageY= imageY + 6.4;
            screen.blit(background_resized,(0,0))#(nazwa obrazu, pozycja 0,0 - lewy dolny róg)
            screen.blit(statek_rotated,(0+imageX,0+ imageY)) # paint to screen
            pygame.display.update()
            clock.tick(20)
            if imageX==1400:
               self.state='plansza_2'

    ''' PLANSZA 2 '''

    def plansza_2(self):
        for event in pygame.event.get():
            if event.type==pygame.QUIT:#Krzyżyk okna wyłącza grę
                pygame.quit()
        screen.blit(background_plansza2_resize,(0,0))
        pygame.display.update()
        pygame.event.pump()
        pygame.time.delay(800)
        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(500)


            #zawijanie tekstu okazało się bardziej skomplikowane, na razie wypisuje każda linjke osobno
        textsurface = myfont.render('"I am alive."', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface2 = myfont.render('You said and looked around. You were surrounded only by sand and the burnt remains of a spaceship.', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 675))

        textsurface2 = myfont.render('"But who am I? And where am I?"', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 700))

        textsurface3 = myfont.render('You put your hands in your pockets. You felt a piece of paper under your fingers.', False, (255, 255, 255))
        screen.blit(textsurface3, (10, 725))

        textsurface3 = myfont.render('"Let\'s see what do we got there."', False, (255, 255, 255))
        screen.blit(textsurface3, (10, 750))

        textsurface4 = myfont.render('NEXT >>', False, (255, 255, 255))
        screen.blit(textsurface4, (SCREEN_WIDTH-120, SCREEN_HEIGHT-60))

        pygame.display.update()
        #pygame.time.delay(11000)
        #self.state='plansza_2_2'
        next=0
        while next==0:
            for event in pygame.event.get():
                if event.type==pygame.QUIT:#Krzyżyk okna wyłącza grę
                    pygame.quit()
                if event.type==pygame.MOUSEBUTTONDOWN: #Dwie następne linijki sprawdzają, czy mysz jest na przycisku
                    if pygame.mouse.get_pos()[0]>=(SCREEN_WIDTH/2-120) and pygame.mouse.get_pos()[1]>=(SCREEN_HEIGHT-60):
                        next=1
                        self.state='plansza_2_2'
    def plansza_2_2(self):
        screen.blit(background_plansza2_resize,(0,0))
        screen.blit(kartka_resize,(0,0))
        screen.blit(cross,(SCREEN_WIDTH/2+287-110,SCREEN_HEIGHT/2-400+40))
        pygame.display.update()
        cancel=0
        while cancel==0:
            for event in pygame.event.get():
                if event.type==pygame.QUIT:#Krzyżyk okna wyłącza grę
                    pygame.quit()
                if event.type==pygame.MOUSEBUTTONDOWN: #Dwie następne linijki sprawdzają, czy mysz jest na przycisku
                    if pygame.mouse.get_pos()[0]>=(SCREEN_WIDTH/2+287-110) and pygame.mouse.get_pos()[0]<=(SCREEN_WIDTH/2+287-110+81):
                        if pygame.mouse.get_pos()[1]>=(SCREEN_HEIGHT/2-400+40) and pygame.mouse.get_pos()[1]<=(SCREEN_HEIGHT/2-400+40+122):
                            cancel=1
                            self.state='plansza_2_3'
    def plansza_2_3(self):
        self.player.kartka1=True
        screen.blit(background_plansza2_resize,(0,0))
        pygame.display.update()
        pygame.display.update()
        pygame.event.pump()
        pygame.time.delay(800)
        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(500)


            #zawijanie tekstu okazało się bardziej skomplikowane, na razie wypisuje każda linjke osobno
        textsurface = myfont.render('"It seems that I am a wizard. Maybe I can find more pages from the diary."', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface2 = myfont.render('Where do you want to go now?', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 675))

        textsurface3 = myfont.render('EAST>>', False, (255, 255, 255))
        screen.blit(textsurface3, (SCREEN_WIDTH-120, SCREEN_HEIGHT-60))

        textsurface4 = myfont.render('<< WEST', False, (255, 255, 255))
        screen.blit(textsurface4, (10, SCREEN_HEIGHT-60))

        textsurface5 = myfont.render('SOUTH', False, (255, 255, 255))
        screen.blit(textsurface5, (SCREEN_WIDTH/2-30, SCREEN_HEIGHT-60))

        textsurface6 = myfont.render('V', False, (255, 255, 255))
        screen.blit(textsurface6, (SCREEN_WIDTH/2, SCREEN_HEIGHT-30))

        pygame.display.update()
        #pygame.time.delay(11000)
        #self.state='plansza_2_2'
        west=0
        while west==0:
            for event in pygame.event.get():
                if event.type==pygame.QUIT:#Krzyżyk okna wyłącza grę
                    pygame.quit()
                if event.type==pygame.MOUSEBUTTONDOWN: #Dwie następne linijki sprawdzają, czy mysz jest na przycisku
                    if pygame.mouse.get_pos()[0]>=(SCREEN_WIDTH/2-120) and pygame.mouse.get_pos()[1]>=(SCREEN_HEIGHT-60):
                        next=1
                        self.check_plansza3()
                    if pygame.mouse.get_pos()[0]<=(300) and pygame.mouse.get_pos()[1]>=(SCREEN_HEIGHT-60):
                        next=1
                        self.check_plansza1()
                    if pygame.mouse.get_pos()[0]<=(SCREEN_WIDTH/2-30) and pygame.mouse.get_pos()[0]<=(SCREEN_WIDTH/2+30) and pygame.mouse.get_pos()[1]>=(SCREEN_HEIGHT-60):
                        next=1
                        self.check_plansza4()
    def plansza_2_again(self):
        screen.blit(background_plansza2_resize,(0,0))
        pygame.display.update()
        pygame.event.pump()
        pygame.time.delay(800)
        surf = pygame.Surface((1400, 150))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-150))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(500)


            #zawijanie tekstu okazało się bardziej skomplikowane, na razie wypisuje każda linjke osobno
        textsurface = myfont.render('"My ship is broken. I need to find every piece of my diary and come back here."', False, (255, 255, 255))
        screen.blit(textsurface, (10, 750))

        textsurface2 = myfont.render('Only then I will be able to go home', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 775))

        textsurface3 = myfont.render('EAST>>', False, (255, 255, 255))
        screen.blit(textsurface3, (SCREEN_WIDTH-120, SCREEN_HEIGHT-60))

        textsurface4 = myfont.render('<< WEST', False, (255, 255, 255))
        screen.blit(textsurface4, (10, SCREEN_HEIGHT-60))

        textsurface5 = myfont.render('SOUTH', False, (255, 255, 255))
        screen.blit(textsurface5, (SCREEN_WIDTH/2-30, SCREEN_HEIGHT-60))

        textsurface6 = myfont.render('V', False, (255, 255, 255))
        screen.blit(textsurface6, (SCREEN_WIDTH/2, SCREEN_HEIGHT-30))
        pygame.display.update()
        #pygame.time.delay(11000)
        #self.state='plansza_2_2'
        next=0
        while next==0:
            for event in pygame.event.get():
                if event.type==pygame.QUIT:#Krzyżyk okna wyłącza grę
                    pygame.quit()
                if event.type==pygame.MOUSEBUTTONDOWN: #Dwie następne linijki sprawdzają, czy mysz jest na przycisku
                    if pygame.mouse.get_pos()[0]>=(SCREEN_WIDTH/2-120) and pygame.mouse.get_pos()[1]>=(SCREEN_HEIGHT-60):
                        next=1
                        self.check_plansza3()
                    if pygame.mouse.get_pos()[0]<=(300) and pygame.mouse.get_pos()[1]>=(SCREEN_HEIGHT-60):
                        next=1
                        self.check_plansza1()
                    if pygame.mouse.get_pos()[0]<=(SCREEN_WIDTH/2-30) and pygame.mouse.get_pos()[0]<=(SCREEN_WIDTH/2+30) and pygame.mouse.get_pos()[1]>=(SCREEN_HEIGHT-60):
                        next=1
                        self.check_plansza4()
    ''' PLANSZA 1 '''

    def plansza_1_1(self):
        self.player.plansza1=True
        screen.blit(plansza_zwykla_resize, (0,0))
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(800)
        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(500)

            #zawijanie tekstu okazało się bardziej skomplikowane, na razie wypisuje każda linjke osobno
        textsurface = myfont.render('As you go forward, in the darkness you hear an unfamiliar whisper.', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface2 = myfont.render('"South from here danger awaits, it is standing in the way of what you are trying to obtain"', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 675))

        textsurface2 = myfont.render('You look around trying to make sense of the situation but there is no one to be seen. The voice seems to just appear directly in your head. It laughs, softly.', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 700))

        textsurface3 = myfont.render('"Indulge me. I will give you a hint, provided you solve one of my riddles"', False, (255, 255, 255))
        screen.blit(textsurface3, (10, 725))

        textsurface3 = myfont.render('"If it is too much for you say- "i give up""', False, (255, 255, 255))
        screen.blit(textsurface3, (10, 750))


        pygame.display.update()

        #nie wiem czemu MOUSEBUTTONDOWN kiepsko dzialalo (50/50 szansa na zawieszenie u mnie), wiec po czasie automatycznie przelaczy sie do nastepnego "slajdu"
        pygame.time.delay(11000)

        self.state = 'plansza_1_2'




    def plansza_1_2(self):
        screen.blit(plansza_zwykla_resize, (0,0))
        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        myfont1 = pygame.font.SysFont('Times New Roman', 16)
        riddlefont = pygame.font.SysFont('Times New Roman', 40)

        textsurface4 = riddlefont.render("WHAT LIVES ON IT'S OWN SUBSTANCE,", False, (255, 255, 255))
        screen.blit(textsurface4, (100, 200))

        textsurface5 = riddlefont.render("BUT DIES AS SOON AS IT DEVOURS ITSELF ?", False, (255, 255, 255))
        screen.blit(textsurface5, (100, 250))

        textsurface = myfont.render('You think for a bit and what comes to mind is:', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface0 = myfont.render(user_text, True, (255, 255, 255))
        screen.blit(textsurface0, (10, 675))

        textsurface6 = myfont1.render('(REMEMBER TO PRESS ENTER AFTER THE ANSWER)', False, (255, 255, 255))
        screen.blit(textsurface6, (500, 850))

        textsurface7 = myfont1.render('(IF YOU DO NOT KNOW THE ANSWER WRITE "I GIVE UP")', False, (255, 255, 255))
        screen.blit(textsurface7, (487, 875))

        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(1000)

        if user_text == 'candle' or user_text == 'a candle':
            textsurface6 = myfont.render('"Correct! As reward, as promised, you get a hint."', True, (255, 255, 255))
            screen.blit(textsurface6, (10, 700))
            textsurface7 = myfont.render('"South from here something new awaits. You should not expect kindness. Stealth is your best bet', True, (255, 255, 255))
            screen.blit(textsurface7, (10, 725))
            textsurface8 = myfont.render('"Now go, adventurer..."', True, (255, 255, 255))
            screen.blit(textsurface7, (10, 725))
            pygame.display.flip()
            pygame.time.delay(4000)
            self.state = 'move_from1'

        elif user_text == 'i give up' or user_text == 'give up':
            textsurface6 = myfont.render('"Too bad. Good luck without knowing the hint. You are gonna need it"', True, (255, 255, 255))
            screen.blit(textsurface6, (10, 700))
            textsurface7 = myfont.render('The voice disappers, but its omnious sound still rings in your head', True, (255, 255, 255))
            screen.blit(textsurface7, (10, 725))
            textsurface8 = myfont.render('Still, you need to move forward', True, (255, 255, 255))
            screen.blit(textsurface7, (10, 725))
            pygame.display.flip()
            pygame.time.delay(4000)
            self.state = 'move_from1'
        pygame.display.flip()

    def plansza_1_again(self): #plansza 1 gdzie nic sie nie dzieje, uruchamiana gdy gracz ponownie wejdzie na pole 1
        screen.blit(plansza_zwykla_resize, (0,0))
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(800)
        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(500)

        textsurface = myfont.render('You find yourself again in this place where you encountered the mysterious voice', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface0 = myfont.render('Nothing is happening. You decide to continue moving', False, (255, 255, 255))
        screen.blit(textsurface0, (10, 625))

        pygame.time.delay(4000)
        self.state = 'move_from1'

    def move_from1(self):
        screen.fill((0, 0, 0))
        riddlefont = pygame.font.SysFont('Times New Roman', 40)

        textsurface = riddlefont.render("It seems you could only go east or south from here.", False, (255, 255, 255))
        screen.blit(textsurface, (100, 200))

        textsurface1 = riddlefont.render("You decide to go:", False, (255, 255, 255))
        screen.blit(textsurface1, (100, 250))

        textsurface2 = riddlefont.render(user_text, True, (255, 255, 255))
        screen.blit(textsurface2, (100, 300))



        if user_text == 'east' or user_text == 'the east':
            textsurface3 = riddlefont.render("You decided to move towards the East", False, (255, 255, 255))
            screen.blit(textsurface3, (100, 350))
            pygame.display.flip()
            pygame.time.delay(3000)
            self.check_plansza2()

        elif user_text == 'south' or user_text == 'the south':
            textsurface3 = riddlefont.render("You decided to move towards the South", False, (255, 255, 255))
            screen.blit(textsurface3, (100, 350))
            pygame.display.flip()
            pygame.time.delay(3000)
            self.check_plansza4()

        pygame.display.flip()

    ''' PLANSZA 3 '''


    ''' PLANSZA 4 '''
    
    def plansza_4(self):
        screen.blit(plansza_kosmita_resize, (0,0))

        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        myfont1 = pygame.font.SysFont('Times New Roman', 16)

        textsurface = myfont.render('Now you realize you are in some serious trouble. You freeze completly trying to find the best way out of the situation.', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface2 = myfont.render('The situation being a weird intimidating alien right in front of you. Of course, with your luck, you would not crash on a planet with nice looking aliens.', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 675))

        textsurface2 = myfont.render('You feel like you have only two options.', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 700))

        textsurface3 = myfont.render('You could hide behind a boulder- you are not sure if it is big enough to be a good hiding spot or...', False, (255, 255, 255))
        screen.blit(textsurface3, (10, 725))

        textsurface3 = myfont.render('You could say hi to the alien and hopefully make a new exotic fun frienship.', False, (255, 255, 255))
        screen.blit(textsurface3, (10, 750))

        textsurface3 = myfont.render('You decide to: (write "hide" or "say hi")', False, (255, 255, 255))
        screen.blit(textsurface3, (10, 775))

        textsurface0 = myfont.render(user_text, True, (255, 255, 255))
        screen.blit(textsurface0, (10, 800))

        textsurface6 = myfont1.render('(REMEMBER TO PRESS ENTER AFTER THE ANSWER)', False, (255, 255, 255))
        screen.blit(textsurface6, (500, 875))

        pygame.display.update()
        pygame.event.pump()
        pygame.time.delay(1000)

        if user_text == 'say hi':
            textsurface7 = myfont.render('You decided to say hi. What could go wrong.', False, (255, 255, 255))
            screen.blit(textsurface7, (10, 825))

            pygame.display.flip()
            pygame.time.delay(2000)
            self.state = 'plansza_4_hi'

        elif user_text == 'hide':
            textsurface7 = myfont.render('You decided to try and hide.', False, (255, 255, 255))
            screen.blit(textsurface7, (10, 825))

            pygame.display.flip()
            pygame.time.delay(2000)
            self.state = 'plansza_4_hide'

    def plansza_4_hi(self):
        screen.blit(plansza_kosmita_resize, (0,0))

        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(800)

        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        myfont1 = pygame.font.SysFont('Times New Roman', 16)

        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(500)

        textsurface = myfont.render('You move towards the alien with an optimistic attitude.', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface2 = myfont.render('"Hi" you say "Could I-" ', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 675))

        textsurface2 = myfont.render('Before you can finish everything goes black', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 700))

        pygame.display.update()
        pygame.event.pump()
        pygame.time.delay(8000)

        self.state = 'game_over'

    def plansza_4_hide(self):
        screen.blit(plansza_kosmita_resize, (0,0))

        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(800)

        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        myfont1 = pygame.font.SysFont('Times New Roman', 16)

        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(500)

        textsurface = myfont.render('You moved very slowly towards the boulder hoping the alien will not notice.', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface2 = myfont.render('You stayed behind a boulder for a while and when you heard their steps fading you could finally let your breath out', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 675))

        textsurface2 = myfont.render('You were safe. You decided to continue movig forward', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 700))

        pygame.display.update()
        pygame.time.delay(11000)

        self.state = 'move_from4'



    def plansza_4_again(self):
        screen.blit(plansza_zwykla_resize, (0,0))
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(800)
        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(500)

        textsurface = myfont.render('This is the place you encountered the alien. Well, technically you are the alien here.', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface0 = myfont.render('Nothing is happening. You decide to continue moving', False, (255, 255, 255))
        screen.blit(textsurface0, (10, 675))

        pygame.display.flip()
        pygame.event.pump()

        pygame.time.delay(4000)
        self.state = 'move_from4'

    def move_from4(self):
        screen.fill((0, 0, 0))
        riddlefont = pygame.font.SysFont('Times New Roman', 40)

        textsurface = riddlefont.render("It seems you could go north, east or south from here.", False, (255, 255, 255))
        screen.blit(textsurface, (100, 200))

        textsurface1 = riddlefont.render("You decide to go:", False, (255, 255, 255))
        screen.blit(textsurface1, (100, 250))

        textsurface2 = riddlefont.render(user_text, True, (255, 255, 255))
        screen.blit(textsurface2, (100, 300))


        if user_text == 'east' or user_text == 'the east':
            textsurface3 = riddlefont.render("You decided to move towards the East", False, (255, 255, 255))
            screen.blit(textsurface3, (100, 350))
            pygame.display.flip()
            pygame.time.delay(3000)
            self.check_plansza5()

        elif user_text == 'south' or user_text == 'the south':
            textsurface3 = riddlefont.render("You decided to move towards the South", False, (255, 255, 255))
            screen.blit(textsurface3, (100, 350))
            pygame.display.flip()
            pygame.time.delay(3000)
            self.check_plansza7()

        elif user_text == 'north' or user_text == 'the north':
            textsurface3 = riddlefont.render("You decided to move towards the North", False, (255, 255, 255))
            screen.blit(textsurface3, (100, 350))
            pygame.display.flip()
            pygame.time.delay(3000)
            self.check_plansza1()


        pygame.display.flip()



    ''' PLANSZA 5 '''


    def plansza_5_1(self):
        screen.blit(plansza_zwykla_resize, (0,0))
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(800)
        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(500)

            #zawijanie tekstu okazało się bardziej skomplikowane, na razie wypisuje każda linjke osobno
        textsurface = myfont.render('On this site you encounter a weird boulder with some words carved in it', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface2 = myfont.render('It did not look like any language you knew, yet the meaning somhow came effortlessly to you.', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 675))

        textsurface2 = myfont.render('"Hm. A riddle."- you say to yourself- "what a weird place for a boulder with a riddle"', False, (255, 255, 255))
        screen.blit(textsurface2, (10, 700))

        textsurface3 = myfont.render('You decided to give it a try', False, (255, 255, 255))
        screen.blit(textsurface3, (10, 725))

        pygame.display.update()

        pygame.time.delay(11000)

        self.state = 'plansza_5_2'

    def plansza_5_2(self):
        screen.blit(plansza_zwykla_resize, (0,0))
        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        myfont1 = pygame.font.SysFont('Times New Roman', 16)
        riddlefont = pygame.font.SysFont('Times New Roman', 40)

        textsurface4 = riddlefont.render("WHAT IS ALWAYS COMING, BUT NEVER ARRIVES?", False, (255, 255, 255))
        screen.blit(textsurface4, (100, 200))

        textsurface = myfont.render('You think for a bit and what comes to mind is:', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface0 = myfont.render(user_text, True, (255, 255, 255))
        screen.blit(textsurface0, (10, 675))


        textsurface6 = myfont1.render('(REMEMBER TO PRESS ENTER AFTER THE ANSWER)', False, (255, 255, 255))
        screen.blit(textsurface6, (500, 850))

        textsurface7 = myfont1.render('(IF YOU DO NOT KNOW THE ANSWER WRITE "I GIVE UP")', False, (255, 255, 255))
        screen.blit(textsurface7, (487, 875))

        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(1000)

        if user_text == 'tommorow' or user_text == 'a next day' or user_text == 'the next day':
            textsurface6 = myfont.render('You carve in your answer to spoil the fun for other shipwreck survivors with memory loss', True, (255, 255, 255))
            screen.blit(textsurface6, (10, 700))
            textsurface7 = myfont.render('You smile proudly at your doing. Weirdly enough, another writing appears on the stone. it says:', True, (255, 255, 255))
            screen.blit(textsurface7, (10, 725))
            textsurface8 = myfont.render('"What lives here is fast but cannot see what moves slow"', True, (255, 255, 255))
            screen.blit(textsurface8, (10, 750))
            textsurface9 = myfont.render('A thought, that if dinosaurs lived here you would surely notice appears in your head.', True, (255, 255, 255))
            screen.blit(textsurface9, (10, 775))
            textsurface10 = myfont.render('You shrug and decide to keep that information in mind anyway. Just in case.', True, (255, 255, 255))
            screen.blit(textsurface10, (10, 800))
            pygame.display.flip()
            pygame.time.delay(17000)
            self.state = 'move_from5'

        elif user_text == 'i give up' or user_text == 'give up':
            textsurface6 = myfont.render('You wanted to solve the riddle for some fun but the answer did not come to you', True, (255, 255, 255))
            screen.blit(textsurface6, (10, 700))
            textsurface7 = myfont.render('Annoyed, you kick the boulder, but it does nothing but hurt your feet.', True, (255, 255, 255))
            screen.blit(textsurface7, (10, 725))
            textsurface8 = myfont.render('You mumble something about not wanting to do the riddle anyway and pick your next destination', True, (255, 255, 255))
            screen.blit(textsurface8, (10, 750))
            pygame.display.flip()
            pygame.time.delay(10000)
            self.state = 'move_from5'
        pygame.display.flip()

    def move_from5(self):
                screen.fill((0, 0, 0))
                riddlefont = pygame.font.SysFont('Times New Roman', 40)
                myfont1 = pygame.font.SysFont('Times New Roman', 16)

                textsurface = riddlefont.render("It seems you could go in any derection from here. North, east, south or west.", False, (255, 255, 255))
                screen.blit(textsurface, (100, 200))

                textsurface1 = riddlefont.render("You decide to go:", False, (255, 255, 255))
                screen.blit(textsurface1, (100, 250))

                textsurface2 = riddlefont.render(user_text, True, (255, 255, 255))
                screen.blit(textsurface2, (100, 300))

                textsurface6 = myfont1.render('(REMEMBER TO PRESS ENTER AFTER THE ANSWER)', False, (255, 255, 255))
                screen.blit(textsurface6, (500, 850))

                pygame.display.flip()
                pygame.event.pump()
                pygame.time.delay(1000)

                if user_text == 'east' or user_text == 'the east':
                    textsurface3 = riddlefont.render("You decided to move towards the East", False, (255, 255, 255))
                    screen.blit(textsurface3, (100, 350))
                    pygame.display.flip()
                    pygame.time.delay(3000)
                    #self.check_plansza6()

                elif user_text == 'south' or user_text == 'the south':
                    textsurface3 = riddlefont.render("You decided to move towards the South", False, (255, 255, 255))
                    screen.blit(textsurface3, (100, 350))
                    pygame.display.flip()
                    pygame.time.delay(3000)
                    #self.check_plansza8()

                elif user_text == 'north' or user_text == 'the north':
                    textsurface3 = riddlefont.render("You decided to move towards the North", False, (255, 255, 255))
                    screen.blit(textsurface3, (100, 350))
                    pygame.display.flip()
                    pygame.time.delay(3000)
                    #self.check_plansza2()

                elif user_text == 'west' or user_text == 'the west':
                    textsurface3 = riddlefont.render("You decided to move towards the West", False, (255, 255, 255))
                    screen.blit(textsurface3, (100, 350))
                    pygame.display.flip()
                    pygame.time.delay(3000)
                    #self.check_plansza4()
    def plansza_5_again(self): #plansza 1 gdzie nic sie nie dzieje, uruchamiana gdy gracz ponownie wejdzie na pole 1
        screen.blit(plansza_zwykla_resize, (0,0))
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(800)
        surf = pygame.Surface((1400, 250))
        surf.fill((0, 0, 0))
        rect= surf.get_rect()
        screen.blit(surf, (SCREEN_WIDTH / 2-700, SCREEN_HEIGHT-250))
        myfont = pygame.font.SysFont('Times New Roman', 22)
        pygame.display.flip()
        pygame.event.pump()
        pygame.time.delay(500)

        textsurface = myfont.render('You find yourself again in the place with the weird looking stone. It still looks out of place.', False, (255, 255, 255))
        screen.blit(textsurface, (10, 650))

        textsurface0 = myfont.render('Nothing is happening. You decide to continue moving', False, (255, 255, 255))
        screen.blit(textsurface0, (10, 625))

        pygame.time.delay(4000)
        self.state = 'move_from5'

    ''' PLANSZA 6 '''

    ''' PLANSZA 7 '''

    ''' PLANSZA 8 '''


    ''' PLANSZA 9 '''


    ''' PLANSZA GAME OVER'''

    def game_over(self):
        screen.fill((0, 0, 0))
        riddlefont = pygame.font.SysFont('Times New Roman', 80)

        textsurface = riddlefont.render("GAME OVER", False, (255, 255, 255))
        screen.blit(textsurface, (450, 400))

        pygame.display.update()
        pygame.event.pump()
        pygame.time.delay(4000)

        pygame.quit()

    ''' STATE MENAGER '''
    def state_menager(self):
        if self.state=='intro_menu':
            self.intro_menu()
        elif self.state=='plansza_awaria':
            self.plansza_awaria()
        elif self.state=='plansza_2':
            self.plansza_2()
        elif self.state=='plansza_2_2':
            self.plansza_2_2()
        elif self.state=='plansza_2_3':
            self.plansza_2_3()
        elif self.state=='plansza_2_again':
            self.plansza_2_again()
        elif self.state == 'plansza_1_1':
            self.plansza_1_1()
        elif self.state == 'plansza_1_2':
            self.plansza_1_2()
        elif self.state == 'plansza_1_again':
            self.plansza_1_again()
        elif self.state == 'move_from1':
            self.move_from1()
        elif self.state == 'plansza_5_1':
            self.plansza_5_1()
        elif self.state == 'plansza_5_2':
            self.plansza_5_2()
        elif self.state == 'move_from5':
            self.move_from5()
        elif self.state == 'plansza_4':
            self.plansza_4()
        elif self.state =='plansza_4_again':
            self.plansza_4_again()
        elif self.state == 'move_from4':
            self.move_from4()
        elif self.state == 'plansza_4_hide':
            self.plansza_4_hide()
        elif self.state == 'plansza_4_hi':
            self.plansza_4_hi()
        elif self.state == 'game_over':
            self.game_over()
            
#inicjalizacja pygame
pygame.init()
clock=pygame.time.Clock()
game_state=GameState()

#Tworzenie okna głównego
SCREEN_WIDTH = 1400
SCREEN_HEIGHT = 900
screen=pygame.display.set_mode((1400,900))
    #Tytuł i ikonka
pygame.display.set_caption("Lost in space")#Tu wpisać nazwę gry
icon=pygame.image.load('project.png')#nazwa pliku ikonki png, najlepiej z przezroczystym tłem. Jeżeli jest w innym folderze, dodać ścieżkę
pygame.display.set_icon(icon)


#Intro menu
user_text = ''
#Tło ekranu startowego
background=pygame.image.load('tlo.png')
background_resized=pygame.transform.scale(background, (SCREEN_WIDTH,SCREEN_HEIGHT))

#Intro menu
emergency_txt=pygame.image.load('emergency.png')
red_button=pygame.image.load("rec.png")
background_menu=pygame.image.load('tlo_menu.jpg')
background_menu_resized=pygame.transform.scale(background_menu, (SCREEN_WIDTH,SCREEN_HEIGHT))
statek=pygame.image.load('ship.png')
statek_rotated=pygame.transform.rotate(statek,-90)
danger=pygame.image.load('caution.png')
#plansza 2
background_plansza2=pygame.image.load('rakieta.PNG')
background_plansza2_resize = pygame.transform.scale(background_plansza2, (SCREEN_WIDTH,SCREEN_HEIGHT))
kartka=pygame.image.load('kartka_z_pamietnika_pierwsza.png')
kartka_resize = pygame.transform.scale(kartka,(SCREEN_WIDTH,SCREEN_HEIGHT))
cross=pygame.image.load('X.png')
#plansza 1- zagadka, hint 4
plansza_zwykla = pygame.image.load('tło.png')
plansza_zwykla_resize = pygame.transform.scale(plansza_zwykla, (SCREEN_WIDTH,SCREEN_HEIGHT))
#plansza 4 / 9
plansza_kosmita = pygame.image.load('kosmita.png')
plansza_kosmita = pygame.transform.scale(plansza_kosmita, (SCREEN_WIDTH,SCREEN_HEIGHT))

#MAIN GAME LOOP
running=True
while running:

    game_state.state_menager()
    clock.tick(60)
    for event in pygame.event.get(): #zamiast wstawiania do każdej planszy osobno powinno zadziałać tutaj
        if event.type==pygame.QUIT:
            pygame.quit()
        if event.type == pygame.KEYDOWN: #daje możliwośc pisania w odpowienich polach użytkownikowi ale trzaba wcisnąć enter żeby tekst sie wyzerował na następny input
            if event.key == pygame.K_BACKSPACE:
                user_text = user_text[:-1]
            elif event.key == pygame.K_RETURN:
                user_text = ''
            else:
                user_text += event.unicode
                user_text = (user_text.lower())
